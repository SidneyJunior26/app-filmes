{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FilmesService } from 'src/app/core/filmes.service';\nimport { AlertaComponent } from 'src/app/shared/components/alert/alerta.component';\nimport { ValidarCamposService } from 'src/app/shared/components/campos/validar-campos.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/components/campos/validar-campos.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"src/app/core/filmes.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/material/toolbar\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"../../shared/components/campos/input-text/input-text.component\";\nimport * as i10 from \"../../shared/components/campos/input-date/input-date.component\";\nimport * as i11 from \"../../shared/components/campos/input-textarea/input-textarea.component\";\nimport * as i12 from \"../../shared/components/campos/input-number/input-number.component\";\nimport * as i13 from \"../../shared/components/campos/input-select/input-select.component\";\nimport * as i14 from \"@angular/material/button\";\n\nfunction CadastroFilmesComponent_mat_card_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 3);\n    i0.ɵɵelementStart(1, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function CadastroFilmesComponent_mat_card_3_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.submit();\n    })(\"ngReset\", function CadastroFilmesComponent_mat_card_3_Template_form_ngReset_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.limparForm();\n    });\n    i0.ɵɵelementStart(2, \"mat-card-content\");\n    i0.ɵɵelement(3, \"app-input-text\", 5);\n    i0.ɵɵelement(4, \"app-input-text\", 6);\n    i0.ɵɵelement(5, \"app-input-date\", 7);\n    i0.ɵɵelement(6, \"app-input-textarea\", 8);\n    i0.ɵɵelement(7, \"app-input-number\", 9);\n    i0.ɵɵelement(8, \"app-input-text\", 10);\n    i0.ɵɵelement(9, \"app-input-select\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-card-actions\");\n    i0.ɵɵelementStart(11, \"button\", 12);\n    i0.ɵɵtext(12, \"Salvar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 13);\n    i0.ɵɵtext(14, \"Cancelar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.cadastro);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.cadastro);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.cadastro);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.cadastro);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.cadastro);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.cadastro);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.cadastro);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.cadastro)(\"opcoes\", ctx_r0.generos);\n  }\n}\n\nexport let CadastroFilmesComponent = /*#__PURE__*/(() => {\n  class CadastroFilmesComponent {\n    constructor(validacao, dialog, fb, service, router, activatedRouter) {\n      this.validacao = validacao;\n      this.dialog = dialog;\n      this.fb = fb;\n      this.service = service;\n      this.router = router;\n      this.activatedRouter = activatedRouter;\n    }\n\n    get f() {\n      return this.cadastro.controls;\n    }\n\n    ngOnInit() {\n      this.id = this.activatedRouter.snapshot.params['id'];\n\n      if (this.id) {\n        this.service.visualizar(this.id).subscribe(filme => this.criarFormulario(filme));\n      } else {\n        this.criarFormulario(this.criarFilmeBranco());\n      }\n\n      this.generos = ['Ação', 'Comédia', 'Romance', 'Drama', 'Aventura', 'Terror', 'Ficção Cientifica'];\n    }\n\n    submit() {\n      this.cadastro.markAllAsTouched();\n\n      if (this.cadastro.invalid) {\n        return;\n      }\n\n      const filme = this.cadastro.getRawValue();\n      this.salvar(filme);\n    }\n\n    limparForm() {\n      if (this.id) {\n        this.router.navigateByUrl('filmes');\n      } else {\n        this.cadastro.reset();\n      }\n    }\n\n    criarFormulario(filme) {\n      this.cadastro = this.fb.group({\n        titulo: [filme.titulo, [Validators.required, Validators.minLength(2), Validators.maxLength(256)]],\n        urlFoto: [filme.urlFoto, [Validators.minLength(10)]],\n        dtLancamento: [filme.dtLancamento, [Validators.required]],\n        descricao: [filme.descricao],\n        nota: [filme.nota, [Validators.required, Validators.min(0), Validators.max(10)]],\n        urlIMDb: [filme.urlIMDb, [Validators.minLength(10)]],\n        genero: [filme.genero, [Validators.required]]\n      });\n    }\n\n    criarFilmeBranco() {\n      return {\n        id: null,\n        titulo: null,\n        urlFoto: null,\n        dtLancamento: null,\n        descricao: null,\n        nota: null,\n        urlIMDb: null,\n        genero: null\n      };\n    }\n\n    salvar(filme) {\n      this.service.salvar(filme).subscribe(() => {\n        const config = {\n          data: {\n            btnSucesso: 'Ir para a tela de listagem',\n            btnCancelar: 'Cadastrar um novo filme',\n            corBtnCancelar: 'primary',\n            possuiBtnFechar: true\n          }\n        };\n        const dialogRef = this.dialog.open(AlertaComponent, config);\n        dialogRef.afterClosed().subscribe(opcao => {\n          if (opcao) {\n            this.router.navigateByUrl('filmes');\n          } else {\n            this.limparForm();\n          }\n        });\n      }, err => {\n        const config = {\n          data: {\n            titulo: 'Erro ao salvar',\n            descricao: 'Não conseguimos salvar seu registro. Tente novamente mais tarde.',\n            corBtnSucesso: 'warn',\n            btnSucesso: 'Fechar',\n            possuiBtnFechar: false\n          }\n        };\n        this.dialog.open(AlertaComponent, config);\n      });\n    }\n\n  }\n\n  CadastroFilmesComponent.ɵfac = function CadastroFilmesComponent_Factory(t) {\n    return new (t || CadastroFilmesComponent)(i0.ɵɵdirectiveInject(i1.ValidarCamposService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.FilmesService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute));\n  };\n\n  CadastroFilmesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CadastroFilmesComponent,\n    selectors: [[\"app-cadastro-filmes\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"app-title\"], [1, \"main-div\"], [\"class\", \"center width50\", 4, \"ngIf\"], [1, \"center\", \"width50\"], [\"novalidate\", \"\", \"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\", \"ngReset\"], [\"titulo\", \"T\\u00EDtulo\", \"controlName\", \"titulo\", 3, \"formGroup\"], [\"titulo\", \"Link Foto\", \"controlName\", \"urlFoto\", 3, \"formGroup\"], [\"titulo\", \"Data de Lan\\u00E7amento\", \"controlName\", \"dtLancamento\", 3, \"formGroup\"], [\"titulo\", \"Descri\\u00E7\\u00E3o\", \"controlName\", \"descricao\", 3, \"formGroup\"], [\"titulo\", \"Nota IMDb\", \"controlName\", \"nota\", \"step\", \"0.1\", 3, \"formGroup\"], [\"titulo\", \"Link IMDb\", \"controlName\", \"urlIMDb\", 3, \"formGroup\"], [\"titulo\", \"G\\u00EAnero\", \"controlName\", \"genero\", 3, \"formGroup\", \"opcoes\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", 1, \"btn\", \"btn-primary\"], [\"type\", \"reset\", \"mat-raised-button\", \"\", 1, \"btn\", \"btn-secondary\"]],\n    template: function CadastroFilmesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0);\n        i0.ɵɵtext(1, \"Cadastrar Filme\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵtemplate(3, CadastroFilmesComponent_mat_card_3_Template, 15, 9, \"mat-card\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.cadastro);\n      }\n    },\n    directives: [i6.MatToolbar, i7.NgIf, i8.MatCard, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i8.MatCardContent, i9.InputTextComponent, i10.InputDateComponent, i11.InputTextareaComponent, i12.InputNumberComponent, i13.InputSelectComponent, i8.MatCardActions, i14.MatButton],\n    styles: [\"\"]\n  });\n  return CadastroFilmesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}