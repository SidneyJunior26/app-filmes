{"ast":null,"code":"import { FormGroup } from '@angular/forms';\nimport { ValidarCamposService } from '../validar-campos.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../validar-campos.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/common\";\n\nfunction InputNumberComponent_mat_error_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Campo obrigat\\u00F3rio.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InputNumberComponent_mat_error_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Campo precisa ser no m\\u00EDnimo \", ctx_r1.validacao.lengthValidate(ctx_r1.formControl, \"min\"), \".\");\n  }\n}\n\nfunction InputNumberComponent_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Campo precisa ser no m\\u00E1ximo \", ctx_r2.validacao.lengthValidate(ctx_r2.formControl, \"max\"), \"\");\n  }\n}\n\nexport let InputNumberComponent = /*#__PURE__*/(() => {\n  class InputNumberComponent {\n    constructor(validacao) {\n      this.validacao = validacao;\n      this.min = 0;\n      this.max = 10;\n      this.step = 1;\n    }\n\n    get formControl() {\n      return this.formGroup.controls[this.controlName];\n    }\n\n  }\n\n  InputNumberComponent.ɵfac = function InputNumberComponent_Factory(t) {\n    return new (t || InputNumberComponent)(i0.ɵɵdirectiveInject(i1.ValidarCamposService));\n  };\n\n  InputNumberComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InputNumberComponent,\n    selectors: [[\"app-input-number\"]],\n    inputs: {\n      titulo: \"titulo\",\n      formGroup: \"formGroup\",\n      controlName: \"controlName\",\n      min: \"min\",\n      max: \"max\",\n      step: \"step\"\n    },\n    decls: 6,\n    vars: 10,\n    consts: [[3, \"formGroup\"], [1, \"full-width\"], [\"matInput\", \"\", \"type\", \"number\", 3, \"placeholder\", \"name\", \"formControlName\", \"min\", \"max\", \"step\"], [4, \"ngIf\"]],\n    template: function InputNumberComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-form-field\", 1);\n        i0.ɵɵelement(2, \"input\", 2);\n        i0.ɵɵtemplate(3, InputNumberComponent_mat_error_3_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(4, InputNumberComponent_mat_error_4_Template, 2, 1, \"mat-error\", 3);\n        i0.ɵɵtemplate(5, InputNumberComponent_mat_error_5_Template, 2, 1, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"placeholder\", ctx.titulo)(\"name\", ctx.controlName)(\"formControlName\", ctx.controlName)(\"min\", ctx.min)(\"max\", ctx.max)(\"step\", ctx.step);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validacao.hasErrorValidate(ctx.formControl, \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validacao.hasErrorValidate(ctx.formControl, \"min\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validacao.hasErrorValidate(ctx.formControl, \"max\"));\n      }\n    },\n    directives: [i2.NgControlStatusGroup, i2.FormGroupDirective, i3.MatFormField, i4.MatInput, i2.NumberValueAccessor, i2.MinValidator, i2.MaxValidator, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i5.NgIf, i3.MatError],\n    styles: [\"\"]\n  });\n  return InputNumberComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}